name: CI

on:
  push:
    branches: [ main, staging, develop, feat/** ]
  pull_request:
    branches: [ main, staging, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      PLAYWRIGHT_BROWSERS_PATH: 0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install frontend deps and browsers
        working-directory: apps/web
        run: |
          pnpm install
          npx playwright install --with-deps chromium

      - name: Web - Lint & Unit
        working-directory: apps/web
        run: |
          pnpm build
          pnpm test:unit

      - name: Backend - Restore & Build
        run: |
          dotnet restore TrustLoops.sln
          dotnet build TrustLoops.sln -c Release --no-restore

      - name: Backend - Tests
        run: |
          dotnet test tests/WebApp.Tests/WebApp.Tests.csproj -c Release --no-build --logger trx

      - name: Start web preview (background)
        working-directory: apps/web
        run: |
          pnpm preview --host --port 5173 &
          for i in {1..30}; do
            if curl -sSf http://localhost:5173 > /dev/null; then echo "Web is up"; break; fi
            echo "Waiting for web..."; sleep 2;
          done

      - name: E2E - Playwright
        working-directory: apps/web
        env:
          VITE_API_URL: http://localhost:5233
        run: |
          pnpm test:e2e
